{
	"info": {
		"_postman_id": "cb186e09-8d00-434e-a380-09bb0bef98fd",
		"name": "auth-server-regression",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Sign Up",
					"item": [
						{
							"name": "Sign Up Success [201]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b93e63a4-5e54-4060-8665-4eb2f2bccedb",
										"exec": [
											"pm.test(\"Response code is CREATED\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var autoVerifyEnabled = pm.environment.get(\"auto-verify-enabled\");\r",
											"\r",
											"if (autoVerifyEnabled) {\r",
											"   pm.test(\"Response contains Access Token\", function () {\r",
											"        pm.expect(pm.response.text()).to.include('accessToken');\r",
											"        pm.environment.set(\"access-token\", pm.response.json().accessToken);\r",
											"    });\r",
											"\r",
											"    pm.test(\"Response contains Refresh Token\", function () {\r",
											"        pm.expect(pm.response.text()).to.include('refreshToken');\r",
											"        pm.environment.set(\"refresh-token\", pm.response.json().refreshToken);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Response contains Created User Email\", function () {\r",
											"        pm.expect(pm.response.text()).to.include('email');\r",
											"    });\r",
											"\r",
											"    pm.test(\"Response contains Created User Verification Token\", function () {\r",
											"        pm.expect(pm.response.text()).to.include('verificationToken');\r",
											"        pm.environment.set(\"verification-token\", pm.response.json().verificationToken);\r",
											"    });\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3f68f5c3-7c0f-486f-a99d-284e5870640f",
										"exec": [
											"pm.environment.set(\"current-index\", Number(pm.environment.get(\"current-index\")) + 1);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"username\": \"{{username}}{{current-index}}\",\r\n \"password\": \"{{password}}{{current-index}}\",\r\n \"email\": \"{{email}}{{current-index}}@test.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uri}}/auth/signup",
									"host": [
										"{{uri}}"
									],
									"path": [
										"auth",
										"signup"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify User Success [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5b10ff53-781d-48bf-a582-58caab13c545",
										"exec": [
											"var autoVerifyEnabled = pm.environment.get(\"auto-verify-enabled\");\r",
											"\r",
											"if(!autoVerifyEnabled) {\r",
											"    pm.test(\"Response code is OK\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "52c9b256-dca3-47fb-961a-6fa7496b27fb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{uri}}/auth/verify?token={{verification-token}}",
									"host": [
										"{{uri}}"
									],
									"path": [
										"auth",
										"verify"
									],
									"query": [
										{
											"key": "token",
											"value": "{{verification-token}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Sign In",
					"item": [
						{
							"name": "Sign In By Username Success [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3334163-ef0d-4c87-a8b4-28fc3e352b54",
										"exec": [
											"pm.test(\"Response code is OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Access Token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('accessToken');\r",
											"    pm.environment.set(\"access-token\", pm.response.json().accessToken);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Refresh Token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('refreshToken');\r",
											"    pm.environment.set(\"refresh-token\", pm.response.json().refreshToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"username\": \"{{username}}{{current-index}}\",\r\n \"password\": \"{{password}}{{current-index}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uri}}/auth/login",
									"host": [
										"{{uri}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request New Token Success [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "35fb0eb8-c802-4b44-b08a-93d9c2efb66e",
										"exec": [
											"pm.test(\"Response code is OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Access Token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('accessToken');\r",
											"    pm.environment.set(\"access-token\", pm.response.json().accessToken);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Refresh Token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('refreshToken');\r",
											"    pm.environment.set(\"refresh-token\", pm.response.json().refreshToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"token\": \"{{refresh-token}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uri}}/auth/token",
									"host": [
										"{{uri}}"
									],
									"path": [
										"auth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign In By Email Success [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c2d3f3f4-c745-4305-aad7-1fbc932b45c8",
										"exec": [
											"pm.test(\"Response code is OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Access Token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('accessToken');\r",
											"    pm.environment.set(\"access-token\", pm.response.json().accessToken);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Refresh Token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('refreshToken');\r",
											"    pm.environment.set(\"refresh-token\", pm.response.json().refreshToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"email\": \"{{email}}{{current-index}}@test.com\",\r\n \"password\": \"{{password}}{{current-index}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uri}}/auth/login",
									"host": [
										"{{uri}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign In Failure [400]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f15078ce-51ec-43b3-b1b3-aeb89c8b0c1f",
										"exec": [
											"pm.test(\"Response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Error Message\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('message');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"password\": \"{{password}}{{current-index}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uri}}/auth/login",
									"host": [
										"{{uri}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Sign Out",
					"item": [
						{
							"name": "Sign Out Success [204]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "885dc198-c1ed-43a4-9dc3-5c5da9850b15",
										"exec": [
											"pm.test(\"Response code is No Content\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"token\": \"{{refresh-token}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uri}}/auth/logout",
									"host": [
										"{{uri}}"
									],
									"path": [
										"auth",
										"logout"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Password",
					"item": [
						{
							"name": "Forget Password Success [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fb6f36a-9e8b-4dbf-a208-0c495162d83e",
										"exec": [
											"pm.test(\"Response code is OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"username\": \"{{username}}{{current-index}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uri}}/auth/forget-password",
									"host": [
										"{{uri}}"
									],
									"path": [
										"auth",
										"forget-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Reset Password Token Success [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "00f998d9-3088-473f-86b2-d0bcb7178ca9",
										"exec": [
											"pm.test(\"Response code is OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Reset Password Token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('resetPasswordToken');\r",
											"    pm.environment.set(\"reset-password-token\", pm.response.json().resetPasswordToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{admin-auth-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{uri}}/auth/reset-password-token?username={{username}}{{current-index}}",
									"host": [
										"{{uri}}"
									],
									"path": [
										"auth",
										"reset-password-token"
									],
									"query": [
										{
											"key": "username",
											"value": "{{username}}{{current-index}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Reset Password Token Failure [403]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "440386e9-dd79-47a7-9e50-be3bf94bfd73",
										"exec": [
											"pm.test(\"Response code is Forbidden\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{uri}}/auth/reset-password-token?username={{username}}{{current-index}}",
									"host": [
										"{{uri}}"
									],
									"path": [
										"auth",
										"reset-password-token"
									],
									"query": [
										{
											"key": "username",
											"value": "{{username}}{{current-index}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset Password Success [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cede04fa-e003-4001-9bec-e7b03fbfdd65",
										"exec": [
											"pm.test(\"Response code is OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"username\": \"{{username}}{{current-index}}\",\r\n \"password\": \"{{changed-password}}{{current-index}}\",\r\n \"token\": \"{{reset-password-token}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uri}}/auth/reset-password",
									"host": [
										"{{uri}}"
									],
									"path": [
										"auth",
										"reset-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign In With Changed Password Success [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1accf134-19fb-4e8d-8618-7acb8b6a8da7",
										"exec": [
											"pm.test(\"Response code is OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Access Token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('accessToken');\r",
											"    pm.environment.set(\"access-token\", pm.response.json().accessToken);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Refresh Token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('refreshToken');\r",
											"    pm.environment.set(\"refresh-token\", pm.response.json().refreshToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"username\": \"{{username}}{{current-index}}\",\r\n \"password\": \"{{changed-password}}{{current-index}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uri}}/auth/login",
									"host": [
										"{{uri}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}
